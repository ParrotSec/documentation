{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home For the Parrot Project homepage, visit parrotsec.org . An important part of any operating system is documentation, the technical manuals that describe the operation and use of programs. As part of its efforts to create a high-quality free operating system, the Parrot Project is making every effort to provide all of its users with proper documentation in an easily accessible form. The documentation is still under construction, and all the Parrot users are invited to contribute to the creation and translation process of this portal. Need help? Contact our Staff We have a staff of volunteers and community members who can help you troubleshooting system bugs and guiding you from the installation to the configuration and customization of the system. Debian Documentation The Parrot Project is based on top of the testing branch of Debian GNU/Linux, then most of the Debian Documentation is valid for Parrot as well. Debian Handbook , the comprehensive user manual Debian Reference , a terse user's guide with the focus on the shell command line The Debian Wiki","title":"Home"},{"location":"#home","text":"For the Parrot Project homepage, visit parrotsec.org . An important part of any operating system is documentation, the technical manuals that describe the operation and use of programs. As part of its efforts to create a high-quality free operating system, the Parrot Project is making every effort to provide all of its users with proper documentation in an easily accessible form. The documentation is still under construction, and all the Parrot users are invited to contribute to the creation and translation process of this portal.","title":"Home"},{"location":"#need-help-contact-our-staff","text":"We have a staff of volunteers and community members who can help you troubleshooting system bugs and guiding you from the installation to the configuration and customization of the system.","title":"Need help? Contact our Staff"},{"location":"#debian-documentation","text":"The Parrot Project is based on top of the testing branch of Debian GNU/Linux, then most of the Debian Documentation is valid for Parrot as well. Debian Handbook , the comprehensive user manual Debian Reference , a terse user's guide with the focus on the shell command line The Debian Wiki","title":"Debian Documentation"},{"location":"community/","text":"Community Portal Parrot Security is a community-driven open source project, and it is also a gateway to spread innovative ideas born inside its community. Join Our Community Join us Social Pages Git Facebook Twitter Youtube Telegram channel Or join #parrotsec on irc.freenode.net Groups Our community lives in several places, here are some links to stay in touch with us Community Forum Telegram International Group Facebook International group Events Check our Events page and meet our team and other community members. Local Communities Arabic Community Telegram Chinese Community Telegram French Community Telegram German Community Telegram Greek Community Telegram Indian Community Telegram Italian Community Telegram Indonesian Community Telegram Spanish Community Telegram Russian Community Telegram Turkish Community Telegram Telegram Algerian Community","title":"Community"},{"location":"community/#community-portal","text":"Parrot Security is a community-driven open source project, and it is also a gateway to spread innovative ideas born inside its community.","title":"Community Portal"},{"location":"community/#join-our-community","text":"Join us","title":"Join Our Community"},{"location":"community/#social-pages","text":"Git Facebook Twitter Youtube Telegram channel Or join #parrotsec on irc.freenode.net","title":"Social Pages"},{"location":"community/#groups","text":"Our community lives in several places, here are some links to stay in touch with us Community Forum Telegram International Group Facebook International group","title":"Groups"},{"location":"community/#events","text":"Check our Events page and meet our team and other community members.","title":"Events"},{"location":"community/#local-communities","text":"Arabic Community Telegram Chinese Community Telegram French Community Telegram German Community Telegram Greek Community Telegram Indian Community Telegram Italian Community Telegram Indonesian Community Telegram Spanish Community Telegram Russian Community Telegram Turkish Community Telegram Telegram Algerian Community","title":"Local Communities"},{"location":"mirror-list/","text":"Introduction The Parrot project does not only deliver a ready-to-use system in the ISO format, but it also provides a vast amount of additional software that can be installed apart from the official parrot repository. The Parrot repository is used to provide officially supported software, system updates and security fixes. The mirrors network The software in the parrot archive is delivered in form of deb packages, and these packages are served through a vast network of mirror servers that provide the same set of packages distributed all around the world for faster software delivery. The Parrot system is configured to use the central parrot archive directors. The Parrot directors are special servers that collect all the requests of the end users and redirect them to the geographically nearest download server available for the user who made the request. Security measures The Parrot Mirror Network is secured by centralized digital signatures and the mirrors can't inject fake updates. If a evil mirror tries to inject a fake package, the parrot system will automatically refuse to download and install it, and will raise an alert message. This security measure implemented in APT (the parrot/debian package manager) is very efficient and reliable because digital signatures are applied offline by the Parrot archive maintainer, and not by the mirror servers, ensuring direct and secure developer-to-user chain of trust. Configuration and custom setup The APT package manager uses /etc/apt/sources.list and any .list file found in the /etc/apt/sources.list.d/ directory. NOTE: /etc/apt/sources.list is EMPTY and the default APT configuration is located at /etc/apt/sources.list.d/parrot.list. Content of /etc/apt/sources.list.d/parrot.list: deb http://deb.parrotsec.org/parrot stable main contrib non-free #deb-src http://deb.parrotsec.org/parrot stable main contrib non-free Other mirrors for manual configuration NCSA North Central and South Americas Location Mirror ID bandwidth Provider Name URL APT config string Massachussetts MIT 1 Gbps SIPB MIT mirrors.mit.edu/parrot deb http://mirrors.mit.edu/parrot/ parrot main contrib non-free Virginia JMU 1 Gbps James Madison University mirror.jmu.edu/pub/parrot deb http://mirror.jmu.edu/pub/parrot/ parrot main contrib non-free New York Clarkson 1 Gbps Clarkson University mirror.clarkson.edu/parrot deb https://mirror.clarkson.edu/parrot/ parrot main contrib non-free California Berkeley 1 Gbps Berkeley Open Computing Facility mirrors.ocf.berkeley.edu/parrot deb https://mirrors.ocf.berkeley.edu/parrot/ parrot main contrib non-free Ecuador CEDIA 100 Mbps RED CEDIA (National research and education center of Ecuador) mirror.cedia.org.ec/parrot deb https://mirror.cedia.org.ec/parrot/ parrot main contrib non-free Ecuador UTA 100 Mbps UTA (Universidad T\u00e9cnica de ambato) mirror.uta.edu.ec/parrot deb https://mirror.uta.edu.ec/parrot/parrot main contrib non-free< Brazil USP 1 Gbps University of Sao Paulo sft.if.usp.br/parrot deb http://sft.if.usp.br/parrot/ main contrib non-free Ecuador UEB 100 Mbps UEB (Universidad Estatal de Bolivar) mirror.ueb.edu.ec/parrot deb https://mirror.ueb.edu.ec/parrot/ parrot main contrib non-free EMEA Europe Middle East and Asia Location Mirror ID bandwidth Provider Name URL APT config string Italy GARR 10 Gbps GARR Consortium (Italian Research & Education Network) parrot.mirror.garr.it/mirrors/parrot deb https://parrot.mirror.garr.it/mirrors/parrot/ parrot main contrib non-free Germany Halifax 20 Gbps RWTH-Aachen (Halifax students group) ftp.halifax.rwth-aachen.de/parrotsec deb https://ftp.halifax.rwth-aachen.de/parrotsec/ parrot main contrib non-free Germany Esslingen 10 Gbps Esslingen (University of Applied Sciences) ftp-stud.hs-esslingen.de/pub/Mirrors/archive.parrotsec.org deb https://ftp-stud.hs-esslingen.de/pub/Mirrors/archive.parrotsec.org/ parrot main contrib non-free Netherland NLUUG 10 Gbps Nluug ftp.nluug.nl/os/Linux/distr/parrot deb https://ftp.nluug.nl/os/Linux/distr/parrot/ parrot main contrib non-free Poland Onet 10 Gbps Onet Datacenter mirror.onet.pl/pub/mirrors/parrot deb http://mirror.onet.pl/pub/mirrors/parrot/ parrot main contrib non-free Sweden UMU 20 Gbps ACC UMU (Academic Computer Club, Umea University) ftp.acc.umu.se/mirror/parrotsec.org/parrot deb https://ftp.acc.umu.se/mirror/parrotsec.org/parrot/ parrot main contrib non-free Ireland Heanet 10 Gbps Heanet (Ireland's National Research & Education Network) ftp.heanet.ie/pub/parrotsec deb https://ftp.heanet.ie/pub/parrotsec/ parrot main contrib non-free Greece UOC 1 Gbps UoC (University of Crete - Computer Center) ftp.cc.uoc.gr/mirrors/linux/parrot deb https://ftp.cc.uoc.gr/mirrors/linux/parrot/ parrot main contrib non-free Belgium Belnet 10 Gbps Belnet (The Belgian National Research) ftp.belnet.be/archive.parrotsec.org deb http://ftp.belnet.be/mirror/archive.parrotsec.org/ parrot main contrib non-free Spain Osluz 1 Gbps Osluz (Oficina de software libre de la Universidad de Zaragoza) matojo.unizar.es/parrot deb http://matojo.unizar.es/parrot/ parrot main contrib non-free Portugal UP 1 Gbps U.Porto (University of Porto) mirrors.up.pt/parrot deb https://mirrors.up.pt/parrot/ parrot main contrib non-free Denmark Dotsrc 10 Gbps Dotsrc (Aalborg university) mirrors.dotsrc.org/parrot deb https://mirrors.dotsrc.org/parrot/ parrot main contrib non-free Turkey EB 100 Mbps EB turkey.archive.parrotsec.org/parrot deb http://turkey.archive.parrotsec.org/parrot/ parrot main contrib non-free Russia Yandex 1 Gbps Yandex mirror.yandex.ru/mirrors/parrot deb https://mirror.yandex.ru/mirrors/parrot/ parrot main contrib non-free Russia Truenetwork 10 Gbps Truenetwork mirror.truenetwork.ru/parrot deb https://mirror.truenetwork.ru/parrot/ parrot main contrib non-free Iran ASIS 1 Gbps ASIS parrot.asis.io deb http://parrot.asis.io/ parrot main contrib non-free APAC Asia and Pacific Location Mirror ID bandwidth Provider Name URL APT config string Bangladesh Amberit 1 Gbps Amberit (formerly Dhakacom) mirror.amberit.com.bd/parrotsec deb http://mirror.amberit.com.bd/parrotsec/ parrot main contrib non-free Taiwan NCHC 20 Gbps NCHC (Free Software Lab) free.nchc.org.tw/parrot deb http://free.nchc.org.tw/parrot/ parrot main contrib non-free Singapore 0x 10 Gbps 0x mirror.0x.sg/parrot deb https://mirror.0x.sg/parrot/ parrot main contrib non-free China USTC 1Gbps CMCC 1Gbps Cernet 300Mbps ChinaNet China TUNA 2 Gbps TUNA (Tsinghua university of Beijing, TUNA association) mirrors.tuna.tsinghua.edu.cn/parrot deb https://mirrors.tuna.tsinghua.edu.cn/parrot/ parrot main contrib non-free China SHU 2 Gbps SHU(Shanghai University) [mirrors.shu.edu.cn/parrot ](http://mirrors.shu.edu.cn/parrot ) deb https://mirrors.shu.edu.cn/parrot/ parrot main contrib non-free China SJTUG 2 Gbps SJTUG (SJTU *NIX User Group) mirrors.sjtug.sjtu.edu.cn/parrot deb https://mirrors.sjtug.sjtu.edu.cn/parrot/ parrot main contrib non-free New Caledonia Lagoon 1 Gbps Lagoon Networks mirror.lagoon.nc/pub/parrot deb http://mirror.lagoon.nc/pub/parrot/ parrot main contrib non-free Thailand KKU 1 Gbps KKU (Khon Kaen University) mirror.kku.ac.th/parrot deb https://mirror.kku.ac.th/parrot/ parrot main contrib non-free Indonesia Datautama 1 Gbps Datautama (PT. Data Utama Dinamika kartolo.sby.datautama.net.id/parrot deb http://kartolo.sby.datautama.net.id/parrot/ parrot main contrib non-free Make your own mirror You can set up a Parrot archive mirror on your server for personal or public usage by following the steps below. Make sure to have enough free space You can sync the entire repository or pick just the ISO images. Make sure to have enough free space to host a mirror, and be ready for future upgrades as the archive size fluctuates. The current archive size is available here archive.parrotsec.org/parrot/misc/archive-size.txt Choose the upstream server We handle several domains for repository syncing services, we suggest to use archive.parrotsec.org for automatic and failproof setups, but upstream settings can be adjusted in case of specific needs. Feel free to contact the Parrot team if you have specific mirroring needs or bandwidth limitations. We can provide you dedicated upstream sources or professional support for your mirror. Main Mirror Director: archive.parrotsec.org Global Zones: EMEA: emea.archive.parrotsec.org NCSA: ncsa.archive.parrotsec.org APAC: apac.archive.parrotsec.org Individual Masters: archive1 france: archive1.parrotsec.org archive2 canada: archive2.parrotsec.org archive3 france: archive3.parrotsec.org archive4 poland: archive4.parrotsec.org Single archives may be unavailable or replaced form time to time. archive.parrotsec.org is automatically balanced between all the available mirrors and will give you zero downtimes. Download the archive If you sync the entire archive with the below instructions, you do NOT need to synchronize the ISO archive. ISO files are included by default! Sync the repository rsync -Pahv --delete-after rsync://archive.parrotsec.org:/parrot-iso /var/www/html/parrot Configure a cronjob launch the following command: crontab -e and add the following content to the crontab file: */10 * * * * flock -xn /tmp/parrot-rsync.lock -c 'rsync -aq --delete-after rsync://archive.parrotsec.org:/parrot-iso /var/www/html/parrot' Download the ISO archive only Do not sync the ISO archive if you are already synchronizing the full archive with the above instructions. ISO files are already provided with the instructions in the precedent paragraph. use the following instructions if you want to sync only the ISO files. Sync the repository rsync -Pahv --delete-after rsync://archive.parrotsec.org:/parrot-iso /var/www/html/parrot Configure a cronjob launch the following command: crontab -e and add the following content to the crontab file: 30 2 * * * flock -xn /tmp/parrot-rsync.lock -c 'rsync -aq --delete-after rsync://archive.parrotsec.org:/parrot /var/www/html/parrot-iso' Expose your mirror via rsync Your mirror can be exposed via rsync to allow other people to sync from you and to allow our mirror director to periodically scan your mirror and perform indexing and health checks. Rsync exposure is mandatory to add your mirror to our official list. The following instructions will set up rsync and expose the parrot archive in compliance with our standards on a debian/ubuntu server. Minor adjustments are required for other non-apt systems. install rsync with: sudo apt install rsync edit /etc/rsyncd.conf with nano: sudo nano /etc/rsyncd.conf paste the following settings in the config file and save it: [parrot] comment = Parrot OS - full archive [archive.parrotsec.org/parrot] path = /var/www/html/parrot/ hosts allow = * #hosts deny = * list=true uid=www-data gid=www-data read only = yes use chroot=yes dont compress # for better performance [parrot-iso] comment = Parrot OS - ISO files only [archive.parrotsec.org/parrot-iso] path = /var/www/html/parrot/ exclude = pool dists hosts allow = * list=true uid=www-data gid=www-data read only = yes use chroot=yes dont compress Enable the rsync service: sudo systemctl enable rsync Start the rsync service: sudo service rsync start Make your mirror official If you want your mirror to be added to our official mirrors list and to our mirror directors, contact us with the following email: team AT parrotsec DOT org have fun :)","title":"Mirror list"},{"location":"mirror-list/#introduction","text":"The Parrot project does not only deliver a ready-to-use system in the ISO format, but it also provides a vast amount of additional software that can be installed apart from the official parrot repository. The Parrot repository is used to provide officially supported software, system updates and security fixes.","title":"Introduction"},{"location":"mirror-list/#the-mirrors-network","text":"The software in the parrot archive is delivered in form of deb packages, and these packages are served through a vast network of mirror servers that provide the same set of packages distributed all around the world for faster software delivery. The Parrot system is configured to use the central parrot archive directors. The Parrot directors are special servers that collect all the requests of the end users and redirect them to the geographically nearest download server available for the user who made the request.","title":"The mirrors network"},{"location":"mirror-list/#security-measures","text":"The Parrot Mirror Network is secured by centralized digital signatures and the mirrors can't inject fake updates. If a evil mirror tries to inject a fake package, the parrot system will automatically refuse to download and install it, and will raise an alert message. This security measure implemented in APT (the parrot/debian package manager) is very efficient and reliable because digital signatures are applied offline by the Parrot archive maintainer, and not by the mirror servers, ensuring direct and secure developer-to-user chain of trust.","title":"Security measures"},{"location":"mirror-list/#configuration-and-custom-setup","text":"The APT package manager uses /etc/apt/sources.list and any .list file found in the /etc/apt/sources.list.d/ directory. NOTE:","title":"Configuration and custom setup"},{"location":"mirror-list/#content-of-etcaptsourceslistdparrotlist","text":"deb http://deb.parrotsec.org/parrot stable main contrib non-free #deb-src http://deb.parrotsec.org/parrot stable main contrib non-free","title":"Content of /etc/apt/sources.list.d/parrot.list:"},{"location":"mirror-list/#other-mirrors-for-manual-configuration","text":"","title":"Other mirrors for manual configuration"},{"location":"mirror-list/#ncsa","text":"North Central and South Americas Location Mirror ID bandwidth Provider Name URL APT config string Massachussetts MIT 1 Gbps SIPB MIT mirrors.mit.edu/parrot deb http://mirrors.mit.edu/parrot/ parrot main contrib non-free Virginia JMU 1 Gbps James Madison University mirror.jmu.edu/pub/parrot deb http://mirror.jmu.edu/pub/parrot/ parrot main contrib non-free New York Clarkson 1 Gbps Clarkson University mirror.clarkson.edu/parrot deb https://mirror.clarkson.edu/parrot/ parrot main contrib non-free California Berkeley 1 Gbps Berkeley Open Computing Facility mirrors.ocf.berkeley.edu/parrot deb https://mirrors.ocf.berkeley.edu/parrot/ parrot main contrib non-free Ecuador CEDIA 100 Mbps RED CEDIA (National research and education center of Ecuador) mirror.cedia.org.ec/parrot deb https://mirror.cedia.org.ec/parrot/ parrot main contrib non-free Ecuador UTA 100 Mbps UTA (Universidad T\u00e9cnica de ambato) mirror.uta.edu.ec/parrot deb https://mirror.uta.edu.ec/parrot/parrot main contrib non-free< Brazil USP 1 Gbps University of Sao Paulo sft.if.usp.br/parrot deb http://sft.if.usp.br/parrot/ main contrib non-free Ecuador UEB 100 Mbps UEB (Universidad Estatal de Bolivar) mirror.ueb.edu.ec/parrot deb https://mirror.ueb.edu.ec/parrot/ parrot main contrib non-free","title":"NCSA"},{"location":"mirror-list/#emea","text":"Europe Middle East and Asia Location Mirror ID bandwidth Provider Name URL APT config string Italy GARR 10 Gbps GARR Consortium (Italian Research & Education Network) parrot.mirror.garr.it/mirrors/parrot deb https://parrot.mirror.garr.it/mirrors/parrot/ parrot main contrib non-free Germany Halifax 20 Gbps RWTH-Aachen (Halifax students group) ftp.halifax.rwth-aachen.de/parrotsec deb https://ftp.halifax.rwth-aachen.de/parrotsec/ parrot main contrib non-free Germany Esslingen 10 Gbps Esslingen (University of Applied Sciences) ftp-stud.hs-esslingen.de/pub/Mirrors/archive.parrotsec.org deb https://ftp-stud.hs-esslingen.de/pub/Mirrors/archive.parrotsec.org/ parrot main contrib non-free Netherland NLUUG 10 Gbps Nluug ftp.nluug.nl/os/Linux/distr/parrot deb https://ftp.nluug.nl/os/Linux/distr/parrot/ parrot main contrib non-free Poland Onet 10 Gbps Onet Datacenter mirror.onet.pl/pub/mirrors/parrot deb http://mirror.onet.pl/pub/mirrors/parrot/ parrot main contrib non-free Sweden UMU 20 Gbps ACC UMU (Academic Computer Club, Umea University) ftp.acc.umu.se/mirror/parrotsec.org/parrot deb https://ftp.acc.umu.se/mirror/parrotsec.org/parrot/ parrot main contrib non-free Ireland Heanet 10 Gbps Heanet (Ireland's National Research & Education Network) ftp.heanet.ie/pub/parrotsec deb https://ftp.heanet.ie/pub/parrotsec/ parrot main contrib non-free Greece UOC 1 Gbps UoC (University of Crete - Computer Center) ftp.cc.uoc.gr/mirrors/linux/parrot deb https://ftp.cc.uoc.gr/mirrors/linux/parrot/ parrot main contrib non-free Belgium Belnet 10 Gbps Belnet (The Belgian National Research) ftp.belnet.be/archive.parrotsec.org deb http://ftp.belnet.be/mirror/archive.parrotsec.org/ parrot main contrib non-free Spain Osluz 1 Gbps Osluz (Oficina de software libre de la Universidad de Zaragoza) matojo.unizar.es/parrot deb http://matojo.unizar.es/parrot/ parrot main contrib non-free Portugal UP 1 Gbps U.Porto (University of Porto) mirrors.up.pt/parrot deb https://mirrors.up.pt/parrot/ parrot main contrib non-free Denmark Dotsrc 10 Gbps Dotsrc (Aalborg university) mirrors.dotsrc.org/parrot deb https://mirrors.dotsrc.org/parrot/ parrot main contrib non-free Turkey EB 100 Mbps EB turkey.archive.parrotsec.org/parrot deb http://turkey.archive.parrotsec.org/parrot/ parrot main contrib non-free Russia Yandex 1 Gbps Yandex mirror.yandex.ru/mirrors/parrot deb https://mirror.yandex.ru/mirrors/parrot/ parrot main contrib non-free Russia Truenetwork 10 Gbps Truenetwork mirror.truenetwork.ru/parrot deb https://mirror.truenetwork.ru/parrot/ parrot main contrib non-free Iran ASIS 1 Gbps ASIS parrot.asis.io deb http://parrot.asis.io/ parrot main contrib non-free","title":"EMEA"},{"location":"mirror-list/#apac","text":"Asia and Pacific Location Mirror ID bandwidth Provider Name URL APT config string Bangladesh Amberit 1 Gbps Amberit (formerly Dhakacom) mirror.amberit.com.bd/parrotsec deb http://mirror.amberit.com.bd/parrotsec/ parrot main contrib non-free Taiwan NCHC 20 Gbps NCHC (Free Software Lab) free.nchc.org.tw/parrot deb http://free.nchc.org.tw/parrot/ parrot main contrib non-free Singapore 0x 10 Gbps 0x mirror.0x.sg/parrot deb https://mirror.0x.sg/parrot/ parrot main contrib non-free China USTC 1Gbps CMCC 1Gbps Cernet 300Mbps ChinaNet China TUNA 2 Gbps TUNA (Tsinghua university of Beijing, TUNA association) mirrors.tuna.tsinghua.edu.cn/parrot deb https://mirrors.tuna.tsinghua.edu.cn/parrot/ parrot main contrib non-free China SHU 2 Gbps SHU(Shanghai University) [mirrors.shu.edu.cn/parrot ](http://mirrors.shu.edu.cn/parrot ) deb https://mirrors.shu.edu.cn/parrot/ parrot main contrib non-free China SJTUG 2 Gbps SJTUG (SJTU *NIX User Group) mirrors.sjtug.sjtu.edu.cn/parrot deb https://mirrors.sjtug.sjtu.edu.cn/parrot/ parrot main contrib non-free New Caledonia Lagoon 1 Gbps Lagoon Networks mirror.lagoon.nc/pub/parrot deb http://mirror.lagoon.nc/pub/parrot/ parrot main contrib non-free Thailand KKU 1 Gbps KKU (Khon Kaen University) mirror.kku.ac.th/parrot deb https://mirror.kku.ac.th/parrot/ parrot main contrib non-free Indonesia Datautama 1 Gbps Datautama (PT. Data Utama Dinamika kartolo.sby.datautama.net.id/parrot deb http://kartolo.sby.datautama.net.id/parrot/ parrot main contrib non-free","title":"APAC"},{"location":"mirror-list/#make-your-own-mirror","text":"You can set up a Parrot archive mirror on your server for personal or public usage by following the steps below.","title":"Make your own mirror"},{"location":"mirror-list/#make-sure-to-have-enough-free-space","text":"You can sync the entire repository or pick just the ISO images. Make sure to have enough free space to host a mirror, and be ready for future upgrades as the archive size fluctuates. The current archive size is available here archive.parrotsec.org/parrot/misc/archive-size.txt","title":"Make sure to have enough free space"},{"location":"mirror-list/#choose-the-upstream-server","text":"We handle several domains for repository syncing services, we suggest to use archive.parrotsec.org for automatic and failproof setups, but upstream settings can be adjusted in case of specific needs. Feel free to contact the Parrot team if you have specific mirroring needs or bandwidth limitations. We can provide you dedicated upstream sources or professional support for your mirror. Main Mirror Director: archive.parrotsec.org Global Zones: EMEA: emea.archive.parrotsec.org NCSA: ncsa.archive.parrotsec.org APAC: apac.archive.parrotsec.org Individual Masters: archive1 france: archive1.parrotsec.org archive2 canada: archive2.parrotsec.org archive3 france: archive3.parrotsec.org archive4 poland: archive4.parrotsec.org Single archives may be unavailable or replaced form time to time. archive.parrotsec.org is automatically balanced between all the available mirrors and will give you zero downtimes.","title":"Choose the upstream server"},{"location":"mirror-list/#download-the-archive","text":"If you sync the entire archive with the below instructions, you do NOT need to synchronize the ISO archive. ISO files are included by default!","title":"Download the archive"},{"location":"mirror-list/#sync-the-repository","text":"rsync -Pahv --delete-after rsync://archive.parrotsec.org:/parrot-iso /var/www/html/parrot","title":"Sync the repository"},{"location":"mirror-list/#configure-a-cronjob","text":"launch the following command: crontab -e and add the following content to the crontab file: */10 * * * * flock -xn /tmp/parrot-rsync.lock -c 'rsync -aq --delete-after rsync://archive.parrotsec.org:/parrot-iso /var/www/html/parrot'","title":"Configure a cronjob"},{"location":"mirror-list/#download-the-iso-archive-only","text":"Do not sync the ISO archive if you are already synchronizing the full archive with the above instructions. ISO files are already provided with the instructions in the precedent paragraph. use the following instructions if you want to sync only the ISO files.","title":"Download the ISO archive only"},{"location":"mirror-list/#sync-the-repository_1","text":"rsync -Pahv --delete-after rsync://archive.parrotsec.org:/parrot-iso /var/www/html/parrot","title":"Sync the repository"},{"location":"mirror-list/#configure-a-cronjob_1","text":"launch the following command: crontab -e and add the following content to the crontab file: 30 2 * * * flock -xn /tmp/parrot-rsync.lock -c 'rsync -aq --delete-after rsync://archive.parrotsec.org:/parrot /var/www/html/parrot-iso'","title":"Configure a cronjob"},{"location":"mirror-list/#expose-your-mirror-via-rsync","text":"Your mirror can be exposed via rsync to allow other people to sync from you and to allow our mirror director to periodically scan your mirror and perform indexing and health checks. Rsync exposure is mandatory to add your mirror to our official list. The following instructions will set up rsync and expose the parrot archive in compliance with our standards on a debian/ubuntu server. Minor adjustments are required for other non-apt systems. install rsync with: sudo apt install rsync edit /etc/rsyncd.conf with nano: sudo nano /etc/rsyncd.conf paste the following settings in the config file and save it: [parrot] comment = Parrot OS - full archive [archive.parrotsec.org/parrot] path = /var/www/html/parrot/ hosts allow = * #hosts deny = * list=true uid=www-data gid=www-data read only = yes use chroot=yes dont compress # for better performance [parrot-iso] comment = Parrot OS - ISO files only [archive.parrotsec.org/parrot-iso] path = /var/www/html/parrot/ exclude = pool dists hosts allow = * list=true uid=www-data gid=www-data read only = yes use chroot=yes dont compress Enable the rsync service: sudo systemctl enable rsync Start the rsync service: sudo service rsync start","title":"Expose your mirror via rsync"},{"location":"mirror-list/#make-your-mirror-official","text":"If you want your mirror to be added to our official mirrors list and to our mirror directors, contact us with the following email: team AT parrotsec DOT org have fun :)","title":"Make your mirror official"},{"location":"partners/","text":"Under construction","title":"Partners"},{"location":"partners/#under-construction","text":"","title":"Under construction"},{"location":"team/","text":"The Parrot Project is a community-driven project. In this page we list people who gave a significant contribution to the project. Core Team nickname full name role(s) email palinuro Lorenzo Faletra Team Leader Core Dev Sysadmin Repository Maintainer palinuro at parrotsec dot org sheireen Lisetta Ferrero Core Dev sheireen at parrotsec dot org mibofra Francesco Bonanno ARM release dev Sysadmin mibofra at parrotsec dot org nikksno Nicolas North Sysadmin legal shit nz at os dot vu marafed Federica Maras\u00e0 Graphic Designer marafed at parrotsec dot org Contributors nickname full name role(s) email mastrobirraio Pino Matranga Website contributor Tiago Teixeira Andrea Costa Website contributor Tissy Irene Pirrotta Former Package Manager tissy at parrotsec dot org Quietwalker Manuel Di Vita Former free software licensing consultant Ambassadors / Community Managers nickname full name role(s) email meu M. Emrah \u00dcns\u00fcr Community manager / Turkish community meu at parrotsec dot org gnugr Vangelis Mouhtsis Debian/MATE Greek community gnugr at parrotsec dot org terabreik Jose Gatica Spanish Community josegatica at parrotsec dot org nemo Sandipan Roy Indian community nemo at parrotsec dot org Special Thanks Name Nanni Bassetti (Caine) Darix Deros (KNXSecurity) Giancarlo Niccolai Nathaniel Jones John Draper (cap'n crunch)","title":"The Parrot Team"},{"location":"team/#core-team","text":"nickname full name role(s) email palinuro Lorenzo Faletra Team Leader Core Dev Sysadmin Repository Maintainer palinuro at parrotsec dot org sheireen Lisetta Ferrero Core Dev sheireen at parrotsec dot org mibofra Francesco Bonanno ARM release dev Sysadmin mibofra at parrotsec dot org nikksno Nicolas North Sysadmin legal shit nz at os dot vu marafed Federica Maras\u00e0 Graphic Designer marafed at parrotsec dot org","title":"Core Team"},{"location":"team/#contributors","text":"nickname full name role(s) email mastrobirraio Pino Matranga Website contributor Tiago Teixeira Andrea Costa Website contributor Tissy Irene Pirrotta Former Package Manager tissy at parrotsec dot org Quietwalker Manuel Di Vita Former free software licensing consultant","title":"Contributors"},{"location":"team/#ambassadors-community-managers","text":"nickname full name role(s) email meu M. Emrah \u00dcns\u00fcr Community manager / Turkish community meu at parrotsec dot org gnugr Vangelis Mouhtsis Debian/MATE Greek community gnugr at parrotsec dot org terabreik Jose Gatica Spanish Community josegatica at parrotsec dot org nemo Sandipan Roy Indian community nemo at parrotsec dot org","title":"Ambassadors / Community Managers"},{"location":"team/#special-thanks","text":"Name Nanni Bassetti (Caine) Darix Deros (KNXSecurity) Giancarlo Niccolai Nathaniel Jones John Draper (cap'n crunch)","title":"Special Thanks"},{"location":"getting-started/01.download/","text":"Parrot Security Parrot Security is our complete all-in-one environment for pentesting, privacy, digital forensics, reverse engineering and software development. The system includes a full arsenal of security oriented tools to cover many steps of the work of a pentester. Parrot Home Parrot Home is a special edition of Parrot designed for daily use, and it targets regular users who need a lightweight, always updated and beautiful system on their laptops or workstations. The distribution has the same look and feel of a regular Parrot environment and includes all the basic programs for daily work. Parrot Home also includes programs to chat privately, encrypt documents with the highest cryptographic standards or surf the net in a completely anonymous and secure way. The system can also be used as a starting point to build a very customized pentesting platform with only the bare needed tools, or you can use it to build your professional workstation by taking advantage of all the latest and most powerful technologies of Debian without hassle. Netinstall Images Parrot offers netinstall images. Netinstall imges are special lightweight iso files containing only the installer. The installer is configured to partition the disk, establish an internet connection and install the system from scratch by downloading all the packages via internet. The netinstall image can be used to install only the headless Parrot Core, or it can be used to install different Desktop Environments. Docker templates Docker is a powerful containerization technology that allows the user to start multiple instances of a template and use them as isolated environments that can be destroyed and restarted in a matter of seconds. A full virtual machine usually requires more computer resources (ram, cpu time and storage), long installation and configuration times and maintenance. The purpose of Parrot for Docker is to easily offer the whole Parrot toolkit on top of every operating system supported by Docker (*NIX distributions, Mac OS and Windows) without all the negative effects of a full virtualized environment. You can fire up a Parrot container inside your existing system or using a cloud provider in just few seconds, and by using an extremely limited amount of resources (just the memory required by the individual tools you run). If you want to perform more tests, each in an isolated environment/workspace, you can start multiple instances from the same Parrot template.","title":"Where to Download"},{"location":"getting-started/01.download/#parrot-security","text":"Parrot Security is our complete all-in-one environment for pentesting, privacy, digital forensics, reverse engineering and software development. The system includes a full arsenal of security oriented tools to cover many steps of the work of a pentester.","title":"Parrot Security"},{"location":"getting-started/01.download/#parrot-home","text":"Parrot Home is a special edition of Parrot designed for daily use, and it targets regular users who need a lightweight, always updated and beautiful system on their laptops or workstations. The distribution has the same look and feel of a regular Parrot environment and includes all the basic programs for daily work. Parrot Home also includes programs to chat privately, encrypt documents with the highest cryptographic standards or surf the net in a completely anonymous and secure way. The system can also be used as a starting point to build a very customized pentesting platform with only the bare needed tools, or you can use it to build your professional workstation by taking advantage of all the latest and most powerful technologies of Debian without hassle.","title":"Parrot Home"},{"location":"getting-started/01.download/#netinstall-images","text":"Parrot offers netinstall images. Netinstall imges are special lightweight iso files containing only the installer. The installer is configured to partition the disk, establish an internet connection and install the system from scratch by downloading all the packages via internet. The netinstall image can be used to install only the headless Parrot Core, or it can be used to install different Desktop Environments.","title":"Netinstall Images"},{"location":"getting-started/01.download/#docker-templates","text":"Docker is a powerful containerization technology that allows the user to start multiple instances of a template and use them as isolated environments that can be destroyed and restarted in a matter of seconds. A full virtual machine usually requires more computer resources (ram, cpu time and storage), long installation and configuration times and maintenance. The purpose of Parrot for Docker is to easily offer the whole Parrot toolkit on top of every operating system supported by Docker (*NIX distributions, Mac OS and Windows) without all the negative effects of a full virtualized environment. You can fire up a Parrot container inside your existing system or using a cloud provider in just few seconds, and by using an extremely limited amount of resources (just the memory required by the individual tools you run). If you want to perform more tests, each in an isolated environment/workspace, you can start multiple instances from the same Parrot template.","title":"Docker templates"},{"location":"getting-started/02.create-boot-device/","text":"The ISO Formats ISO is a special file format that represents the content of a small storage device. The Parrot ISO file is a bit-per-bit representation of the content of a Parrot USB or DVD drive. You can use a special software like Etcher to clone the content of the Parrot ISO to a USB drive and transform such USB drive into a full Parrot USB device. How NOT to create a Parrot USB drive The Parrot ISO uses the iso9660 format (also known as isohybrid). It is a special ISO format that contains not only the partition content, but also the partition table. Some ISO writing programs do not write the iso bit-per-bit into the usb drive at a low level. They create a custom partition table and just copy the file in the USB drive in an unofficial and non-standard way. This behavior is against what the isohybrid was created for, and may break core system functionalities and make the system uninstallable from such USB drives. Parrot users have NOT to use programs like unetbootin , or any program not isohybrid compliant. How to create a Parrot USB drives To create a Parrot bootable device you need a USB drive of at least 4gb for the security edition or 2gb for the home edition Etcher Our official ISO Writing Tool is Etcher - www.etcher.io . It works on GNU/Linux, Mac OS and Windows, it does one thing and it does it well. We suggest all our users to use it. DD DD (and its derivatives) is a command line tool integrated in every unix and unix-like system, and it can be used to write the ISO file into a block device bit per bit.","title":"Create Boot Device"},{"location":"getting-started/02.create-boot-device/#the-iso-formats","text":"ISO is a special file format that represents the content of a small storage device. The Parrot ISO file is a bit-per-bit representation of the content of a Parrot USB or DVD drive. You can use a special software like Etcher to clone the content of the Parrot ISO to a USB drive and transform such USB drive into a full Parrot USB device.","title":"The ISO Formats"},{"location":"getting-started/02.create-boot-device/#how-not-to-create-a-parrot-usb-drive","text":"The Parrot ISO uses the iso9660 format (also known as isohybrid). It is a special ISO format that contains not only the partition content, but also the partition table. Some ISO writing programs do not write the iso bit-per-bit into the usb drive at a low level. They create a custom partition table and just copy the file in the USB drive in an unofficial and non-standard way. This behavior is against what the isohybrid was created for, and may break core system functionalities and make the system uninstallable from such USB drives. Parrot users have NOT to use programs like unetbootin , or any program not isohybrid compliant.","title":"How NOT to create a Parrot USB drive"},{"location":"getting-started/02.create-boot-device/#how-to-create-a-parrot-usb-drives","text":"To create a Parrot bootable device you need a USB drive of at least 4gb for the security edition or 2gb for the home edition","title":"How to create a Parrot USB drives"},{"location":"getting-started/02.create-boot-device/#etcher","text":"Our official ISO Writing Tool is Etcher - www.etcher.io . It works on GNU/Linux, Mac OS and Windows, it does one thing and it does it well. We suggest all our users to use it.","title":"Etcher"},{"location":"getting-started/02.create-boot-device/#dd","text":"DD (and its derivatives) is a command line tool integrated in every unix and unix-like system, and it can be used to write the ISO file into a block device bit per bit.","title":"DD"},{"location":"getting-started/03.how-to-boot/","text":"System boot Once ownloaded your operating system and created a boot device, you are ready to boot Parrot on your computer. In order to do so, simply insert your boot device in the computer and reboot it. During the boot sequence, when asked to select a booting disk, choose the Parrot device. USB Drive Obsolete computers If you're using a very old computer you might not be able to boot your system from a USB drive: in this case you will have to use a DVD or another device your computer will recognize as a booting device. New computers Most laptops allow you to access the booting menu pressing f12; for most desktop computers press f8; for other kind of devices try pressing esc, f12, f11 or f10. Option disabled A lot of computers, even recent ones, the booting menu may be disabled by default: you will have to access the bios settings and enable such option, reboot the computer and press the right key to access the booting menu. Option is not available Some computers allow you to boot the system from USB drives but don't display a menu to select the booting device. If this is your case you need to access the bios settings, go to the booting panel and change the order of which booting devices, placing the USB drive on top of the list. Then simply reboot the computer and the bios will choose the USB drive as a booting device. Secure boot Secure Boot In case you have a new computer with Secure Boot enabled, you will have to open the BIOS settings, disenable the secure boot and set a legacy boot. If your computer doesn't provide a booting menu, follow the instructions displayed on this page in the section above (\u201coption is not available\u201d). DVD Booting a system from a DVD is much easier and compatible with most machines. Regular PC You can boot a DVD by using the standard procedure for the USB pendrive described above. MAC DVD method on old MACs Turn on your computer, insert the DVD straightaway and press the C key as soon as you hear the beep signaling the computer has been turned on. Release the button after a few seconds, as soon as you hear the DVD has started working. Standard method Insert the Parrot boot device during the booting step and press the ALT key: keep it pressed until the booting device menu has been displayed.","title":"How To Boot"},{"location":"getting-started/03.how-to-boot/#system-boot","text":"Once ownloaded your operating system and created a boot device, you are ready to boot Parrot on your computer. In order to do so, simply insert your boot device in the computer and reboot it. During the boot sequence, when asked to select a booting disk, choose the Parrot device.","title":"System boot"},{"location":"getting-started/03.how-to-boot/#usb-drive","text":"","title":"USB Drive"},{"location":"getting-started/03.how-to-boot/#obsolete-computers","text":"If you're using a very old computer you might not be able to boot your system from a USB drive: in this case you will have to use a DVD or another device your computer will recognize as a booting device.","title":"Obsolete computers"},{"location":"getting-started/03.how-to-boot/#new-computers","text":"Most laptops allow you to access the booting menu pressing f12; for most desktop computers press f8; for other kind of devices try pressing esc, f12, f11 or f10.","title":"New computers"},{"location":"getting-started/03.how-to-boot/#option-disabled","text":"A lot of computers, even recent ones, the booting menu may be disabled by default: you will have to access the bios settings and enable such option, reboot the computer and press the right key to access the booting menu.","title":"Option disabled"},{"location":"getting-started/03.how-to-boot/#option-is-not-available","text":"Some computers allow you to boot the system from USB drives but don't display a menu to select the booting device. If this is your case you need to access the bios settings, go to the booting panel and change the order of which booting devices, placing the USB drive on top of the list. Then simply reboot the computer and the bios will choose the USB drive as a booting device.","title":"Option is not available"},{"location":"getting-started/03.how-to-boot/#secure-boot","text":"Secure Boot In case you have a new computer with Secure Boot enabled, you will have to open the BIOS settings, disenable the secure boot and set a legacy boot. If your computer doesn't provide a booting menu, follow the instructions displayed on this page in the section above (\u201coption is not available\u201d).","title":"Secure boot"},{"location":"getting-started/03.how-to-boot/#dvd","text":"Booting a system from a DVD is much easier and compatible with most machines.","title":"DVD"},{"location":"getting-started/03.how-to-boot/#regular-pc","text":"You can boot a DVD by using the standard procedure for the USB pendrive described above.","title":"Regular PC"},{"location":"getting-started/03.how-to-boot/#mac","text":"","title":"MAC"},{"location":"getting-started/03.how-to-boot/#dvd-method-on-old-macs","text":"Turn on your computer, insert the DVD straightaway and press the C key as soon as you hear the beep signaling the computer has been turned on. Release the button after a few seconds, as soon as you hear the DVD has started working.","title":"DVD method on old MACs"},{"location":"getting-started/03.how-to-boot/#standard-method","text":"Insert the Parrot boot device during the booting step and press the ALT key: keep it pressed until the booting device menu has been displayed.","title":"Standard method"},{"location":"getting-started/04.use-parrot/","text":"First contact with the system I have a Parrot USB or DVD, now what? If you properly followed the precedent tutorial, then you have a bootable USB drive or DVD. These storage supports can be used as boot devices to start the computer with the Parrot live environment. Every computer firmware is different, and an unique omnicomprehensive tutorial to boot an external system from USB just does not exist. It is your responsibility to know how your own computer works and how to change boot device on it. Once you booted the system from the USB device you can choose many ways to boot the system from the Parrot Live Boot Menu . Live Mode and Installer The Parrot Boot Menu can let you install the system on your computer, or start it in Live Mode. The live mode is a special boot mode offered by many linux distributions, including Parrot OS, which allows the users to load a fully working linux environment without the need to install it. This is possible because the system is not loaded onto the system's hard drive, instead it is loaded into memory. Parrot OS offers the ability to install the OS while in the live environment offers the ability to test the system without interfering with the computer's hard drive.","title":"Use Parrot"},{"location":"getting-started/04.use-parrot/#first-contact-with-the-system","text":"","title":"First contact with the system"},{"location":"getting-started/04.use-parrot/#i-have-a-parrot-usb-or-dvd-now-what","text":"If you properly followed the precedent tutorial, then you have a bootable USB drive or DVD. These storage supports can be used as boot devices to start the computer with the Parrot live environment. Every computer firmware is different, and an unique omnicomprehensive tutorial to boot an external system from USB just does not exist. It is your responsibility to know how your own computer works and how to change boot device on it. Once you booted the system from the USB device you can choose many ways to boot the system from the Parrot Live Boot Menu .","title":"I have a Parrot USB or DVD, now what?"},{"location":"getting-started/04.use-parrot/#live-mode-and-installer","text":"The Parrot Boot Menu can let you install the system on your computer, or start it in Live Mode. The live mode is a special boot mode offered by many linux distributions, including Parrot OS, which allows the users to load a fully working linux environment without the need to install it. This is possible because the system is not loaded onto the system's hard drive, instead it is loaded into memory. Parrot OS offers the ability to install the OS while in the live environment offers the ability to test the system without interfering with the computer's hard drive.","title":"Live Mode and Installer"},{"location":"getting-started/05.install-parrot/","text":"Parrot Images Security/Home/Workstation These images can be installed from removable DVD, USB or SD storage media. For example, they can be used to make a handy Parrot install medium that can be taken anywhere. The easiest way to prepare the installation media is to download any of the 32-bit or 64-bit Parrot images that will fit on the device and burn it. Of course this will destroy anything already there. To know how to burn the images, please go to this link . Some BIOSes can boot USB or SD storage directly or allow to boot temporarily from them, and some cannot. You may need to configure your BIOS to boot from a \u201cRemovable Drive\u201d or even a \u201cUSB-ZIP\u201d to get it done. Netinstall This image is intended to boot from small storage media (like an old USB drive or CD) and install additional packages over a network; hence the name 'netinst'. The image has the software components needed to run the installer and the base packages to provide a minimal Parrot system. There are several architectures to select: i386, amd64, arm64 and armhf. Download whichever type you prefer and burn it. The procedure is the same as described on the above link. The Installation Process Computer Once the installer starts the initial screen will appear. Press Enter to boot or read the instructions for other boot methods and parameters. After a while the language selection will show up. Use the arrow keys to pick a language and press Enter to continue. Next the country selection will appear, with the choices including countries of the spoken language. If it's not on the short list, a list of all the countries in the world is available. A keyboard layout will be asked. Choosing the default one is suggested. Now sit back while the installer detects some of the existing hardware, and loads the rest of itself from the media. The installer will try to detect the network hardware and set up networking by DHCP. If the system is not on a network or does not have DHCP then the network can be configured manually. Set up the clock and time zone. The installer will try to contact a time server on the Internet to ensure the clock is set correctly. The time zone is based on the country selected earlier and the installer will only ask to select one if a country has multiple zones. Setting up the clock and time zone is followed by the creation of user accounts. By default a password has to be provided for the \u201croot\u201d (administrator) account and information necessary to create one regular user account. If a password is not specified for the \u201croot\u201d user this account will be disabled but the sudo package will be installed later to enable administrative tasks to be carried out on the new system. Now it is time to partition disks. Automatic partitioning can be done either on an entire drive, or available free space on a drive. This is recommended for new users or anyone in a hurry. If autopartition is not wanted, choose \"Manual\" from the menu. If there is an existing DOS or Windows partition that has to be preserved, be very careful with automatic partitioning. If manual partitioning is selected, the installer can be used to resize existing FAT or NTFS partitions to create room for the Parrot install: simply select the partition and specify its new size. On the next screen the partition table will be seen, how the partitions will be formatted, and where they will be mounted. Select a partition to modify or delete it. If automatic partitioning was selected, the \"Finish\" option can be selected and the changes can be written to disk to use what it set up. Remember to assign at least one partition for swap space and to mount a partition on /. Now the installer will format partitions and start to install the base system, which can take a while. The last step is to install a boot loader. If the installer detects other operating systems on the computer, it will add them to the boot menu and let know. By default GRUB will be installed to the master boot record of the first harddrive, which is generally a good choice. That choice can be overridden and install it elsewhere. The installer will now tell that the installation has finished. Remove the media and hit Enter to reboot the machine. It should boot up into the newly installed Parrot system and allow to log in. Docker parrotsec/parrot-core Official Parrot Security Base system without tools. Start a new instance Public image from Docker Cloud docker run -ti --rm --network host parrotsec/parrot-core Local image from Dockerfile docker run -ti --rm -network host parrot-core Install/Update from Docker Cloud docker pull parrotsec/parrot-core Install/Update from local Dockerfile git clone https://dev.parrotsec.org/parrot/docker-images && cd docker-images docker build -t parrot-core[:version] parrot-core parrotsec/parrot Official Parrot Security image with basic security tools. Start a new instance Public image from Docker Cloud docker run -ti --rm --network host parrotsec/parrot Local image from Dockerfile docker run -ti --rm -network host parrot Install/Update from Docker Cloud docker pull parrotsec/parrot Install/Update from local Dockerfile git clone https://dev.parrotsec.org/parrot/docker-images && cd docker-images docker build -t parrot[:version] parrot parrotsec/metasploit Parrot Security Metasploit bundle. Install/Update from Docker Cloud docker pull parrotsec/metasploit Install/Update from local Dockerfile git clone https://dev.parrotsec.org/parrot/docker-images && cd docker-images docker build -t metasploit[:version] metasploit Start a new instance Public image from Docker Cloud docker run -ti --network host parrotsec/metasploit Local image from Dockerfile docker run -ti -network host metasploit Rpi The Flashing Process It is recommended to use high speed class SD Cards (Class 10) to flash the image otherwise the process may be slow. Use Etcher for GNU/Linux, Win32 Disk Imager for Windows or ApplePiBaker for Mac to load the Parrot image onto the SD card. On a Mac, before plugging in the SD card, run the following in Terminal: df -h This will display a list of all the disks attached to the system. Attach the SD card and run the command again, and note the filesystem name of the SD card (it's the one that wasn't there before). It should look like \"/dev/disk2s1\", be careful in the next steps, since mixing things up could overwrite the hard drive data. Now, use the DD command to load the Parrot image onto the card. Use \"man dd\" to see the rest of the operands for dd. First, let's unmount the partition with the following command, with \"x\" being the correct disk number: sudo diskutil unmount /dev/diskX Now Parrot is ready to load. Type, but don't run the command, sudo dd bs=1m if= and enter the location of the Parrot image to load onto the card. Use drag and drop with the disk image into the window to show the file path. After that, type a space, then of=/dev/rdisk and the number of the disk from before. If there is an \"s\" after the initial disk number (like rdisk2s1), do not include the \"s\" or following number. So, \"rdisk2s1\" should look like \"rdisk2.\" Here's what it should look like altogether: sudo dd bs=1m if=LocationOfParrotImage of=/dev/rdiskX Press enter to begin the process, and note that DD does not provide any on-screen information unless there is an error or it finishes. To view the progress during the transfer, type Ctrl T. Wait for the process to complete. You'll know the process is complete when a readout of bytes transferred over the time the process ran appears.","title":"Install Parrot"},{"location":"getting-started/05.install-parrot/#parrot-images","text":"","title":"Parrot Images"},{"location":"getting-started/05.install-parrot/#securityhomeworkstation","text":"These images can be installed from removable DVD, USB or SD storage media. For example, they can be used to make a handy Parrot install medium that can be taken anywhere. The easiest way to prepare the installation media is to download any of the 32-bit or 64-bit Parrot images that will fit on the device and burn it. Of course this will destroy anything already there. To know how to burn the images, please go to this link . Some BIOSes can boot USB or SD storage directly or allow to boot temporarily from them, and some cannot. You may need to configure your BIOS to boot from a \u201cRemovable Drive\u201d or even a \u201cUSB-ZIP\u201d to get it done.","title":"Security/Home/Workstation"},{"location":"getting-started/05.install-parrot/#netinstall","text":"This image is intended to boot from small storage media (like an old USB drive or CD) and install additional packages over a network; hence the name 'netinst'. The image has the software components needed to run the installer and the base packages to provide a minimal Parrot system. There are several architectures to select: i386, amd64, arm64 and armhf. Download whichever type you prefer and burn it. The procedure is the same as described on the above link.","title":"Netinstall"},{"location":"getting-started/05.install-parrot/#the-installation-process","text":"","title":"The Installation Process"},{"location":"getting-started/05.install-parrot/#computer","text":"Once the installer starts the initial screen will appear. Press Enter to boot or read the instructions for other boot methods and parameters. After a while the language selection will show up. Use the arrow keys to pick a language and press Enter to continue. Next the country selection will appear, with the choices including countries of the spoken language. If it's not on the short list, a list of all the countries in the world is available. A keyboard layout will be asked. Choosing the default one is suggested. Now sit back while the installer detects some of the existing hardware, and loads the rest of itself from the media. The installer will try to detect the network hardware and set up networking by DHCP. If the system is not on a network or does not have DHCP then the network can be configured manually. Set up the clock and time zone. The installer will try to contact a time server on the Internet to ensure the clock is set correctly. The time zone is based on the country selected earlier and the installer will only ask to select one if a country has multiple zones. Setting up the clock and time zone is followed by the creation of user accounts. By default a password has to be provided for the \u201croot\u201d (administrator) account and information necessary to create one regular user account. If a password is not specified for the \u201croot\u201d user this account will be disabled but the sudo package will be installed later to enable administrative tasks to be carried out on the new system. Now it is time to partition disks. Automatic partitioning can be done either on an entire drive, or available free space on a drive. This is recommended for new users or anyone in a hurry. If autopartition is not wanted, choose \"Manual\" from the menu. If there is an existing DOS or Windows partition that has to be preserved, be very careful with automatic partitioning. If manual partitioning is selected, the installer can be used to resize existing FAT or NTFS partitions to create room for the Parrot install: simply select the partition and specify its new size. On the next screen the partition table will be seen, how the partitions will be formatted, and where they will be mounted. Select a partition to modify or delete it. If automatic partitioning was selected, the \"Finish\" option can be selected and the changes can be written to disk to use what it set up. Remember to assign at least one partition for swap space and to mount a partition on /. Now the installer will format partitions and start to install the base system, which can take a while. The last step is to install a boot loader. If the installer detects other operating systems on the computer, it will add them to the boot menu and let know. By default GRUB will be installed to the master boot record of the first harddrive, which is generally a good choice. That choice can be overridden and install it elsewhere. The installer will now tell that the installation has finished. Remove the media and hit Enter to reboot the machine. It should boot up into the newly installed Parrot system and allow to log in.","title":"Computer"},{"location":"getting-started/05.install-parrot/#docker","text":"","title":"Docker"},{"location":"getting-started/05.install-parrot/#parrotsecparrot-core","text":"Official Parrot Security Base system without tools. Start a new instance Public image from Docker Cloud docker run -ti --rm --network host parrotsec/parrot-core Local image from Dockerfile docker run -ti --rm -network host parrot-core Install/Update from Docker Cloud docker pull parrotsec/parrot-core Install/Update from local Dockerfile git clone https://dev.parrotsec.org/parrot/docker-images && cd docker-images docker build -t parrot-core[:version] parrot-core","title":"parrotsec/parrot-core"},{"location":"getting-started/05.install-parrot/#parrotsecparrot","text":"Official Parrot Security image with basic security tools. Start a new instance Public image from Docker Cloud docker run -ti --rm --network host parrotsec/parrot Local image from Dockerfile docker run -ti --rm -network host parrot Install/Update from Docker Cloud docker pull parrotsec/parrot Install/Update from local Dockerfile git clone https://dev.parrotsec.org/parrot/docker-images && cd docker-images docker build -t parrot[:version] parrot","title":"parrotsec/parrot"},{"location":"getting-started/05.install-parrot/#parrotsecmetasploit","text":"Parrot Security Metasploit bundle. Install/Update from Docker Cloud docker pull parrotsec/metasploit Install/Update from local Dockerfile git clone https://dev.parrotsec.org/parrot/docker-images && cd docker-images docker build -t metasploit[:version] metasploit Start a new instance Public image from Docker Cloud docker run -ti --network host parrotsec/metasploit Local image from Dockerfile docker run -ti -network host metasploit","title":"parrotsec/metasploit"},{"location":"getting-started/05.install-parrot/#rpi","text":"","title":"Rpi"},{"location":"getting-started/05.install-parrot/#the-flashing-process","text":"It is recommended to use high speed class SD Cards (Class 10) to flash the image otherwise the process may be slow. Use Etcher for GNU/Linux, Win32 Disk Imager for Windows or ApplePiBaker for Mac to load the Parrot image onto the SD card. On a Mac, before plugging in the SD card, run the following in Terminal: df -h This will display a list of all the disks attached to the system. Attach the SD card and run the command again, and note the filesystem name of the SD card (it's the one that wasn't there before). It should look like \"/dev/disk2s1\", be careful in the next steps, since mixing things up could overwrite the hard drive data. Now, use the DD command to load the Parrot image onto the card. Use \"man dd\" to see the rest of the operands for dd. First, let's unmount the partition with the following command, with \"x\" being the correct disk number: sudo diskutil unmount /dev/diskX Now Parrot is ready to load. Type, but don't run the command, sudo dd bs=1m if= and enter the location of the Parrot image to load onto the card. Use drag and drop with the disk image into the window to show the file path. After that, type a space, then of=/dev/rdisk and the number of the disk from before. If there is an \"s\" after the initial disk number (like rdisk2s1), do not include the \"s\" or following number. So, \"rdisk2s1\" should look like \"rdisk2.\" Here's what it should look like altogether: sudo dd bs=1m if=LocationOfParrotImage of=/dev/rdiskX Press enter to begin the process, and note that DD does not provide any on-screen information unless there is an error or it finishes. To view the progress during the transfer, type Ctrl T. Wait for the process to complete. You'll know the process is complete when a readout of bytes transferred over the time the process ran appears.","title":"The Flashing Process"},{"location":"intro/should-i-use-parrot/","text":"Why parrot is different Even if we, the Parrot Developers, would like everyone to use the Parrot System or, at least, give it a try, there are some important considerations to make about who we expect to use Parrot and who may have a bad experience from it. First of all, even if Parrot provides general purpose flavors, its core is still tuned for Security and Forensics operations. In this section we will explain how different is Parrot compared to other general purpose distributions and how different it is from other Pentest and Forensics distributions. Then we will present some categories of people and what kind of experience they may have by using this system. General purpose distributions Parrot is different from a general purpose distribution (i.e. Ubuntu) because it does not try in any way to hide its internals. Meaning that many automation tools included in the system to make it easier to use, still expose what the system has under the hood. A good example is the parrot update reminder : it is a simple yet powerful program that prompts the user to check for system upgrades once a week. but instead of hiding the upgrade process behind a progress bar, it shows the user the full upgrade process from the apt output. Another important difference is that Parrot disables by default all the network services pre-installed in the system, not only to maintain a very low RAM footprint and offer better performance, but also to avoid services exposure in a target network. Every network service needs to be manually started when the user needs it. Pentest distributions Pentest distributions are famous to integrate only security tools, allow easy root access and take down all the system security barriers that may influence the workflow of a pentester. Parrot was designed to be a very comfortable environment for security experts and researchers, and it also includes all the basic programs for daily use that pentest distribution usually exclude (at the cost of less than an additional gigabyte of storage). This choice was taken to make Parrot not only a good system where to perform security tests, but also a good environment where to write reports and communicate with teammates without any need of additional computers, operating systems or installation/configuration steps. Our goal is to allow any professional pentester to make a whole security test from the beginning to the report with just a Parrot ISO and an average laptop. Secure distributions Parrot includes its own sandbox system obtained with the combination of Firejail and AppArmor with custom security profiles. User applications in Parrot are protected and \"jailed\" to limit the damages in case the system is compromised. All this additional security comes with a cost: it is harder to adopt bad behaviors on Parrot. For instance it is not possible to log in as root with the whole desktop environment, or to start critical applications like browsers, media players or advanced document readers with unnecessary privileged permissions. The user can still open root consoles, launch security tools with privileged permissions and use the system without limits. The only thing that changes is that all the critical user applications are now protected from very bad behaviors and common exploit techniques, and the damages caused by advanced exploits are very limited. Forensics distributions Digital forensics experts need and environment that does not compromise their proof. Parrot comes with automount functions disabled by default , to allow forensics acquisitions to be performed in a safe way. The global automount policy is configured in a redundant way in all the layers of the system stack, from the noautomount kernel option passed by default at boot, to the specific file manager settings to disable auto mount and plug&play features. Don't forget that the disks are still recognized by the system, and the system will mount them without protections if the user accidentally open them. The no-automount behavior is consistent and stable, but no protection is provided in case of accidental mounts. a write blocker is always recommended in any digital forensics scenario. Who Parrot is made for Security Experts Digital forensics experts Engineering and IT Students Researchers Journalists & Hacktivists Wannabe Hackers Police officers and special security institutions","title":"Should I use Parrot?"},{"location":"intro/should-i-use-parrot/#why-parrot-is-different","text":"Even if we, the Parrot Developers, would like everyone to use the Parrot System or, at least, give it a try, there are some important considerations to make about who we expect to use Parrot and who may have a bad experience from it. First of all, even if Parrot provides general purpose flavors, its core is still tuned for Security and Forensics operations. In this section we will explain how different is Parrot compared to other general purpose distributions and how different it is from other Pentest and Forensics distributions. Then we will present some categories of people and what kind of experience they may have by using this system.","title":"Why parrot is different"},{"location":"intro/should-i-use-parrot/#general-purpose-distributions","text":"Parrot is different from a general purpose distribution (i.e. Ubuntu) because it does not try in any way to hide its internals. Meaning that many automation tools included in the system to make it easier to use, still expose what the system has under the hood. A good example is the parrot update reminder : it is a simple yet powerful program that prompts the user to check for system upgrades once a week. but instead of hiding the upgrade process behind a progress bar, it shows the user the full upgrade process from the apt output. Another important difference is that Parrot disables by default all the network services pre-installed in the system, not only to maintain a very low RAM footprint and offer better performance, but also to avoid services exposure in a target network. Every network service needs to be manually started when the user needs it.","title":"General purpose distributions"},{"location":"intro/should-i-use-parrot/#pentest-distributions","text":"Pentest distributions are famous to integrate only security tools, allow easy root access and take down all the system security barriers that may influence the workflow of a pentester. Parrot was designed to be a very comfortable environment for security experts and researchers, and it also includes all the basic programs for daily use that pentest distribution usually exclude (at the cost of less than an additional gigabyte of storage). This choice was taken to make Parrot not only a good system where to perform security tests, but also a good environment where to write reports and communicate with teammates without any need of additional computers, operating systems or installation/configuration steps. Our goal is to allow any professional pentester to make a whole security test from the beginning to the report with just a Parrot ISO and an average laptop.","title":"Pentest distributions"},{"location":"intro/should-i-use-parrot/#secure-distributions","text":"Parrot includes its own sandbox system obtained with the combination of Firejail and AppArmor with custom security profiles. User applications in Parrot are protected and \"jailed\" to limit the damages in case the system is compromised. All this additional security comes with a cost: it is harder to adopt bad behaviors on Parrot. For instance it is not possible to log in as root with the whole desktop environment, or to start critical applications like browsers, media players or advanced document readers with unnecessary privileged permissions. The user can still open root consoles, launch security tools with privileged permissions and use the system without limits. The only thing that changes is that all the critical user applications are now protected from very bad behaviors and common exploit techniques, and the damages caused by advanced exploits are very limited.","title":"Secure distributions"},{"location":"intro/should-i-use-parrot/#forensics-distributions","text":"Digital forensics experts need and environment that does not compromise their proof. Parrot comes with automount functions disabled by default , to allow forensics acquisitions to be performed in a safe way. The global automount policy is configured in a redundant way in all the layers of the system stack, from the noautomount kernel option passed by default at boot, to the specific file manager settings to disable auto mount and plug&play features. Don't forget that the disks are still recognized by the system, and the system will mount them without protections if the user accidentally open them. The no-automount behavior is consistent and stable, but no protection is provided in case of accidental mounts. a write blocker is always recommended in any digital forensics scenario.","title":"Forensics distributions"},{"location":"intro/should-i-use-parrot/#who-parrot-is-made-for","text":"Security Experts Digital forensics experts Engineering and IT Students Researchers Journalists & Hacktivists Wannabe Hackers Police officers and special security institutions","title":"Who Parrot is made for"},{"location":"intro/what-is-parrot/","text":"The Parrot System Parrot (Parrot Security, ParrotOS, Parrot GNU/Linux) is a free and open source GNU/Linux distribution based on Debian Testing designed for security experts, developers and privacy aware people. It includes a full portable arsenal for IT security and digital forensics operations, but it also includes everything you need to develop your own programs or protect your privacy while surfing the net. The operating system ships with the MATE desktop environment preinstalled and is available in several flavors to fit your needs. History and Team The first public release appeared on April 10th, 2013 as the result of the work of Lorenzo Faletra who continues to lead development. Originally developed as part of Frozenbox, the effort has grown to include a community of open source developers, professional security experts, advocates of digital rights, and Linux enthusiasts from all around the globe. The project is headquartered in Palermo, Italy and it is supported by an international team of experts and enthusiasts. Who is it designed for The system is designed to be familiar for the security expert and easy to use for the new entry student, but it does not try to hide its internals as other general purpose distributions try to do. Parrot can be used as a daily system , and it provides all the programs for the day to day tasks, including dedicated system flavors that don't ship security tools. Secure Sandboxed Environment People familiar with other pentest distributions may notice that Parrot is quite unique, as it does not allow direct root logins for safety reasons (root can only be used with sudo), and it provides its own sandbox system by combining Firejail and AppArmor with custom security profiles. Software Store The system has its own applications repository including all the packages supported by Debian (more than 56000 packages available over 4 different architectures), plus many other applications and tools Debian can't provide yet, all of them are accessible directly from the APT package manager. Additionally, Parrot supports SNAP , a new package distribution system that provides easy access to many other programs that GNU/Linux distributions don't always ship in their software archives. Take a look at the snap programs list . Flatpak is an universal software store similar to snap. It can be installed from the Parrot official repository. Parrot supports Wine, a compatibility layer to run Windows applications in Linux environments.","title":"What is Parrot?"},{"location":"intro/what-is-parrot/#the-parrot-system","text":"Parrot (Parrot Security, ParrotOS, Parrot GNU/Linux) is a free and open source GNU/Linux distribution based on Debian Testing designed for security experts, developers and privacy aware people. It includes a full portable arsenal for IT security and digital forensics operations, but it also includes everything you need to develop your own programs or protect your privacy while surfing the net. The operating system ships with the MATE desktop environment preinstalled and is available in several flavors to fit your needs.","title":"The Parrot System"},{"location":"intro/what-is-parrot/#_1","text":"","title":"&nbsp;"},{"location":"intro/what-is-parrot/#history-and-team","text":"The first public release appeared on April 10th, 2013 as the result of the work of Lorenzo Faletra who continues to lead development. Originally developed as part of Frozenbox, the effort has grown to include a community of open source developers, professional security experts, advocates of digital rights, and Linux enthusiasts from all around the globe. The project is headquartered in Palermo, Italy and it is supported by an international team of experts and enthusiasts.","title":"History and Team"},{"location":"intro/what-is-parrot/#who-is-it-designed-for","text":"The system is designed to be familiar for the security expert and easy to use for the new entry student, but it does not try to hide its internals as other general purpose distributions try to do. Parrot can be used as a daily system , and it provides all the programs for the day to day tasks, including dedicated system flavors that don't ship security tools.","title":"Who is it designed for"},{"location":"intro/what-is-parrot/#secure-sandboxed-environment","text":"People familiar with other pentest distributions may notice that Parrot is quite unique, as it does not allow direct root logins for safety reasons (root can only be used with sudo), and it provides its own sandbox system by combining Firejail and AppArmor with custom security profiles.","title":"Secure Sandboxed Environment"},{"location":"intro/what-is-parrot/#software-store","text":"The system has its own applications repository including all the packages supported by Debian (more than 56000 packages available over 4 different architectures), plus many other applications and tools Debian can't provide yet, all of them are accessible directly from the APT package manager. Additionally, Parrot supports SNAP , a new package distribution system that provides easy access to many other programs that GNU/Linux distributions don't always ship in their software archives. Take a look at the snap programs list . Flatpak is an universal software store similar to snap. It can be installed from the Parrot official repository. Parrot supports Wine, a compatibility layer to run Windows applications in Linux environments.","title":"Software Store"}]}